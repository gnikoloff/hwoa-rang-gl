export default class CameraController {
    private camera;
    private domElement;
    private target;
    private minDistance;
    private maxDistance;
    private isEnabled;
    private isDamping;
    private dampingFactor;
    private isZoom;
    private zoomSpeed;
    private isRotate;
    private rotateSpeed;
    private isPan;
    private keyPanSpeed;
    private enableKeys;
    private keys;
    private originTarget;
    private originPosition;
    private targetXDampedAction;
    private targetYDampedAction;
    private targetZDampedAction;
    private targetThetaDampedAction;
    private targetPhiDampedAction;
    private targetRadiusDampedAction;
    private _isShiftDown;
    private _rotateStart;
    private _rotateEnd;
    private _roatteDelta;
    private _spherical;
    private _zoomDistanceEnd;
    private _zoomDistance;
    private state;
    private loopId;
    private _panStart;
    private _panDelta;
    private _panEnd;
    private _paused;
    constructor(camera: any, domElement?: HTMLElement);
    setEventHandler(): void;
    removeEventHandler(): void;
    startTick(): void;
    pause(): void;
    start(): void;
    tick(): void;
    updateDampedAction(): void;
    updateCamera(): void;
    _bindEvens(): void;
    _contextMenuHandler(event: MouseEvent): void;
    _mouseDownHandler(event: MouseEvent): void;
    _mouseUpHandler(): void;
    _mouseMoveHandler(event: MouseEvent): void;
    _mouseWheelHandler(event: WheelEvent): void;
    _touchStartHandler(event: TouchEvent): void;
    _touchMoveHandler(event: TouchEvent): void;
    _onKeyDownHandler(event: KeyboardEvent): void;
    _onKeyUpHandler(event: KeyboardEvent): void;
    _updatePanHandler(): void;
    _updateRotateHandler(): void;
}
